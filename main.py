import asyncioimport loggingimport osfrom aiogram import Bot, Dispatcherfrom dotenv import load_dotenvfrom app.admin import adminfrom app.calendar_router import calendar_routerfrom app.database import sqlite_dbfrom app.database.sqlite_db import SQLfrom app.handler import routerfrom app.training.offteach import waiterfrom app.training.posyda import posydafrom app.training.povar import povarasync def main():    load_dotenv()    dp = Dispatcher()    bot = Bot(token=os.getenv('TOKEN'))    dp.include_routers(router, calendar_router, waiter, povar, posyda, admin, SQL)    # dp.startup.register(on_startup)    sqlite_db.sql_start()    await dp.start_polling(bot)# async def startup(dispatcher: Dispatcher):#     await sql_start_command()#     print('Starting up...')if __name__ == '__main__':    logging.basicConfig(level=logging.INFO)  # Подключение логирования    try:        asyncio.run(main())    except KeyboardInterrupt:        print('Бот выключен')