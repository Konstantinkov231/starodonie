import asyncioimport sqlite3from aiogram.types import Message, CallbackQuery, FSInputFilefrom aiogram.filters import CommandStart, CommandObjectfrom aiogram import F, Router, Bot# from aiogram.enums import ChatActionfrom aiogram.fsm.context import FSMContextfrom aiogram.fsm.state import State, StatesGroupfrom app.database.sqlite_db import add_user_start, sql_add_guest_card, tG_idimport app.keyboards as kbrouter = Router()class Reg(StatesGroup):    name = State()    number = State()    photo = State()    food = State()    alerg = State()#https://t.me/THE_SSTAFF_BOT?start=ofstaff  ------- –¥–ª—è –æ—Ñ–∏–∫–æ–≤#https://t.me/THE_SSTAFF_BOT?start=postaff  ------- –¥–ª—è –ø–æ—Å—É–¥–æ–º–æ–µ–∫#https://t.me/THE_SSTAFF_BOT?start=admin    ------- –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤#https://t.me/THE_SSTAFF_BOT?start=povar    ------- –¥–ª—è –ø–æ–≤–∞—Ä–æ–≤@router.message(CommandStart(deep_link=True))async def cmd_start_of (message: Message, command: CommandObject):    param = command.args    if param == 'ofstaff':        await message.answer('–ø—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ñ–∏—Ü–∏–∞—Ç–æ–≤', reply_markup=kb.ofik_inline)            #–∑–¥–µ—Å—å –Ω–∞–¥–æ —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–æ—á–∫–∏–∏ "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –∫ –∫–∞–∂–¥–æ–º—É —Å—Ç–∞—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤–µ—Å—Ç–∏ –≤ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª    elif param == 'postaff':        await message.answer('–ø—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–º–æ—à–Ω–Ω–∏–∫–æ–≤', reply_markup=kb.posyda_inline)    elif param == 'admin':        await message.answer('–ø—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')    elif param == 'povar':        await message.answer('–ø—Ä–∏–≤–µ—Ç, —Ç—ã –ø–æ–ø–∞–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–≤–∞—Ä–∞', reply_markup=kb.povar_inline)# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –±–µ–∑ deep link@router.message(CommandStart())async def cmd_start(message: Message):    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users_start    add_user_start(        tg_id=message.from_user.id,        username=message.from_user.username or "NoUsername"    )    await message.answer(        '–ü—Ä–∏–≤–µ—Ç!\n'        '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ñ–æ–∑–µ—Ñ–∏–Ω–∞, —è —è–≤–ª—è—é—Å—å —Ç–≤–æ–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º\n'        '–≤ –º–∏—Ä —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è –∏ —É–º–∏—Ä–æ—Ç–≤–æ—Ä–µ–Ω–∏—è.\n'        '\n'        '–°–µ–π—á–∞—Å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å—Ä–µ–¥–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —É—Å–ª—É–≥—É',        reply_markup=kb.key_inline    )@router.callback_query(F.data == "yslygi")async def handle_service_selection(callback_query: CallbackQuery):    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º    await callback_query.message.delete()    await callback_query.message.answer("–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥!",                                        reply_markup=await kb.yslygi())@router.message(F.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é —É—Å–ª—É–≥')async def yslygi (massege: Message):    await massege.answer('–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é —É—Å–ª—É–≥, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏ —É –Ω–∞—Å –≤ –ì–ö',                         reply_markup=await kb.yslygi())@router.message(F.text == '–ë–∞–Ω—è')async def banya(message: Message):    photo = FSInputFile('/Users/kostakovacev/PycharmProjects/STARODONIE/imge/BANA.jpg')    await message.answer_photo(photo,                         reply_markup =kb.back)@router.message(F.text == '–ú–∞—Å—Å–∞–∂')async def banya(message: Message):    await message.answer('–∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –º–∞—Å—Å–∞–∂)',                         reply_markup= kb.back)@router.message(F.text == 'CAP-–±–æ—Ä–¥—ã')async def banya(message: Message):    await message.answer('–∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –±–æ—Ä–¥—ã)',                         reply_markup= kb.back)@router.message(F.text == '–ú—É–∑–µ–π "–¢–∏—Ö–∏–π –î–æ–Ω"')async def banya(message: Message):    await message.answer('–∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –º—É–∑–µ–π)',                         reply_markup= kb.back)@router.message(F.text == '–í–∏–¥–æ–Ω–µ–ª—å–Ω—è "–í–µ–¥–µ—Ä–Ω–∏–∫–æ–≤"')async def banya(message: Message):    await message.answer(f'üíì–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –≤–∏–Ω–æ–¥–µ–ª—å–Ω–µ ¬´–í–µ–¥–µ—Ä–Ω–∏–∫–æ–≤—ä¬ª —Å –¥–µ–≥—É—Å—Ç–∞—Ü–∏–µ–π ¬´–î–æ–Ω—Å–∫–∏–µ –≤–∏–Ω–∞¬ª\n'                         f'\n'                         f'–î–µ–≥—É—Å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ç:\n'                         f'1. –°–∏–±–∏—Ä—å–∫–æ–≤—ã–π –±–µ–ª–æ–µ —Å—É—Ö–æ–µ\n'                         f'2. –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–æ–µ –†–æ–∑–æ–≤–æ–µ —Å—É—Ö–æ–µ —Ä–æ–∑–æ–≤–æ–µ (–¶–∏–º–ª—è–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π)\n'                         f'3. –ö—Ä–∞—Å–Ω–æ—Å—Ç–æ–ø –ó–æ–ª–æ—Ç–æ–≤—Å–∫–∏–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ\n'                         f'4. –î–æ–Ω—Å–∫–æ–µ –∫—Ä–∞—Å–Ω–æ–µ –ì–æ–ª—É–±–æ–∫ —Å—É—Ö –∫—Ä–∞—Å–Ω–æ–µ\n'                         f'5. –¶–∏–º–ª—è–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ (–≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ –≤ –¥—É–±–µ)\n'                         f'\n'                         f'–°—Ç–æ–∏–º–æ—Å—Ç—å: 1.200 —Ä—É–±–ª–µ–π / –ø–µ—Ä—Å–æ–Ω–∞\n'                         f'\n'                         f'üíì–≠–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –≤–∏–Ω–æ–¥–µ–ª—å–Ω–µ ¬´–í–µ–¥–µ—Ä–Ω–∏–∫–æ–≤—ä¬ª —Å –¥–µ–≥—É—Å—Ç–∞—Ü–∏–µ–π *¬´–ê–≤—Ç–æ—Ö—Ç–æ–Ω—ã¬ª*\n'                         f'\n'                         f'_–î–µ–≥—É—Å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ç:_\n'                         f'1. –°–∏–±–∏—Ä—å–∫–æ–≤—ã–π –±–µ–ª–æ–µ —Å—É—Ö–æ–µ\n'                         f'2. –°–∏–±–∏—Ä—å–∫–æ–≤—ã–π –±–µ–ª–æ–µ —ç–∫—Å—Ç—Ä–∞ –±—Ä—é—Ç\n'                         f'3. –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–æ–µ –†–æ–∑–æ–≤–æ–µ —Å—É—Ö–æ–µ\n'                         f'4. –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–æ–µ –ì–æ–ª—É–±–æ–∫ –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ\n'                         f'5. –ö—Ä–∞—Å–Ω–æ—Å—Ç–æ–ø –ó–æ–ª–æ—Ç–æ–≤—Å–∫–∏–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ\n'                         f'6. –¶–∏–º–ª—è–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ (–≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ –≤ –¥—É–±–µ)\n'                         f'\n'                         f'–°—Ç–æ–∏–º–æ—Å—Ç—å:_ 1.700 —Ä—É–±–ª–µ–π / –ø–µ—Ä—Å–æ–Ω–∞\n'                         f'\n'                         f'üíìVIP —ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –≤–∏–Ω–æ–¥–µ–ª—å–Ω–µ ¬´–í–µ–¥–µ—Ä–Ω–∏–∫–æ–≤—ä¬ª —Å –¥–µ–≥—É—Å—Ç–∞—Ü–∏–µ–π *¬´–ó–æ–ª–æ—Ç–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è¬ª*\n'                         f'\n'                         f'–î–µ–≥—É—Å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ç:\n'                         f'1. –°–∏–±–∏—Ä—å–∫–æ–≤—ã–π –±–µ–ª–æ–µ —Å—É—Ö–æ–µ\n'                         f'2. –°–∏–±–∏—Ä—å–∫–æ–≤—ã–π –±–µ–ª–æ–µ —ç–∫—Å—Ç—Ä–∞ –±—Ä—é—Ç\n'                         f'3. –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–æ–µ –†–µ–∑–µ—Ä–≤ –±–µ–ª–æ–µ —Å—É—Ö–æ–µ\n'                         f'4. –ö—Ä–∞—Å–Ω–æ—Å—Ç–æ–ø –ó–æ–ª–æ—Ç–æ–≤—Å–∫–∏–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ (–≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ –≤ –¥—É–±–µ)\n'                         f'5. –¶–∏–º–ª—è–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ (–≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ –≤ –¥—É–±–µ)\n'                         f'6. –ö–∞–±–µ—Ä–Ω–µ-–°–æ–≤–∏–Ω—å–æ–Ω –∫—Ä–∞—Å–Ω–æ–µ —Å—É—Ö–æ–µ (–≤—ã–¥–µ—Ä–∂–∞–Ω–Ω–æ–µ –≤ –¥—É–±–µ)\n'                         f'\n'                         f'–°—Ç–æ–∏–º–æ—Å—Ç—å:_ 2.500 —Ä—É–±–ª–µ–π / –ø–µ—Ä—Å–æ–Ω–∞.\n'                         f'\n'                         f'‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n'                         f'–ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –º–µ–Ω—å—à–µ 6 –ø–µ—Ä—Å–æ–Ω ¬´–î–æ–Ω—Å–∫–∏–µ –≤–∏–Ω–∞¬ª –∑–∞ 1.200 - –æ–ø–ª–∞—Ç–∞ 7.200; ¬´–ê–≤—Ç–æ—Ö—Ç–æ–Ω—ã¬ª –∑–∞ 1.700 - –æ–ø–ª–∞—Ç–∞ 8.500; ¬´–ó–æ–ª–æ—Ç–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è¬ª –∑–∞ 2.500 - –æ–ø–ª–∞—Ç–∞ 10.000 —Ä—É–±–ª–µ–π',                         reply_markup= kb.back)#     –ø—Ä–æ–ø–∏—Å–∞—Ç—å —É—Å–ª–æ–≤–∏—è!!!@router.message(F.text == "–ö–∞—Ç–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ç–µ—Ä–µ")async def banya(message: Message):    await message.answer('–∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –∫–∞—Ç–µ—Ä)',                         reply_markup= kb.back)@router.message(F.text == "–í–µ–π–∫–±–æ—Ä–¥–∏–Ω–≥")async def banya(message: Message):    await message.answer('–∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –¥–æ—Å–∫–∏ )',                         reply_markup= kb.back)@router.message(F.text == '–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –≥–æ—Å—Ç—è')async def cmd_start(message: Message, state: FSMContext):    await state.set_state(Reg.name) # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Reg.name    await message.answer(f'–ù—É, —á—Ç–æ –∂! \n'                         f'–ù–∞—á–Ω—ë–º \n'                         f'–í–≤–µ–¥–∏—Ç —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:')@router.message(Reg.name)async def reg_name(message: Message, state: FSMContext):    await state.update_data(name=message.text)    await state.set_state(Reg.number)    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')@router.message(Reg.number)async def reg_number(message: Message, state: FSMContext):    await state.update_data(number=message.text)    await state.set_state(Reg.photo)    await message.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ')@router.message(Reg.photo, F.photo)async def reg_photo(message: Message, state: FSMContext):    await state.update_data(photo=message.photo[-1].file_id)    data = await state.get_data()    await state.set_state(Reg.food)    await message.answer('–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ, –Ω–∞–∑–æ–≤–∏ –ø–æ–∑–∏—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è —É –Ω–∞—Å')@router.message(Reg.food)async def reg_food(message: Message, state: FSMContext):    await state.update_data(food=message.text)    await state.set_state(Reg.alerg)    await message.answer('–ù–∞–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø—Ä–æ —Ç–≤–æ–∏ –∞–ª–ª–µ—Ä–≥–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–∞–º –ø—Ä–æ –Ω–∏—Ö, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Å—Ç–∞–≤—å "-"')@router.message(Reg.alerg)async def reg_alerg(message: Message, state: FSMContext):    await state.update_data(alerg=message.text)    data = await state.get_data()    await message.answer_photo(photo=data['photo'],                               caption=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å: {data['name']},\n"                                       f"{data['number']},\n"                                       f"–í–∫—É—Å–æ–≤—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {data['food']},\n"                                       f"–ê–ª–ª–µ—Ä–≥–∏–∏: {data['alerg']}",                               reply_markup= kb.back)    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≥–æ—Å—Ç—è –≤ —Ç–∞–±–ª–∏—Ü–µ guest_cards    await sql_add_guest_card(state)    await state.clear()    await tG_id(message.from_user.id)  # –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª—è–µ–º tg_id# @router.message()# async def echo(message: Message):#     await message.answer('–≠—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.')# –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –ø–æ–∑–∂–µ –≤ —Å–∞–º—ã–π –∫—Ä–∞–π–Ω–∏–π —Ñ–∞–π–ª