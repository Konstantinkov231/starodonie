from aiogram import F, Routerfrom aiogram.filters import CommandStart, CommandObjectfrom aiogram.fsm.context import FSMContextfrom aiogram.fsm.state import State, StatesGroupfrom aiogram.types import Messageimport app.keyboards as kbfrom app.database.sqlite_db import (    add_user_start,    sql_add_guest_card,    update_guest_tg_id)router = Router()class Reg(StatesGroup):    name = State()    number = State()    photo = State()    food = State()    alerg = State()@router.message(CommandStart(deep_link=True))async def cmd_start_of(message: Message, command: CommandObject):    param = command.args    if param == 'ofstaff':        await message.answer('привет, ты попал на страницу официатов', reply_markup=kb.ofik_inline)    elif param == 'postaff':        await message.answer('привет, ты попал на страницу помошнников', reply_markup=kb.posyda_inline)    elif param == 'admin':        await message.answer('привет, ты попал на страницу администратора')    elif param == 'povar':        await message.answer('привет, ты попал на страницу повара', reply_markup=kb.povar_inline)@router.message(CommandStart())async def cmd_start(message: Message):    add_user_start(        tg_id=message.from_user.id,        username=message.from_user.username or "NoUsername"    )    await message.answer(        'Привет!\nМеня зовут Жозефина, я являюсь твоим помощником\nв мир спокойствия и умиротворения.',        reply_markup=kb.key_inline    )# ... возможные другие хендлеры услуг ...@router.message(F.text == 'Создать карточку гостя')async def cmd_create_card(message: Message, state: FSMContext):    await state.set_state(Reg.name)    await message.answer('Начнём! Введите ваше имя и фамилию:')@router.message(Reg.name)async def reg_name(message: Message, state: FSMContext):    await state.update_data(name=message.text)    await state.set_state(Reg.number)    await message.answer('Отправьте свой номер телефона')@router.message(Reg.number)async def reg_number(message: Message, state: FSMContext):    await state.update_data(number=message.text)    await state.set_state(Reg.photo)    await message.reply('Отправьте фото')@router.message(Reg.photo, F.photo)async def reg_photo(message: Message, state: FSMContext):    await state.update_data(photo=message.photo[-1].file_id)    await state.set_state(Reg.food)    await message.answer('Расскажите про предпочтения в еде')@router.message(Reg.food)async def reg_food(message: Message, state: FSMContext):    await state.update_data(food=message.text)    await state.set_state(Reg.alerg)    await message.answer('Укажите аллергии или введите "-"')@router.message(Reg.alerg)async def reg_alerg(message: Message, state: FSMContext):    data = await state.get_data()    # Отправляем итоговую карточку    await message.answer_photo(        photo=data['photo'],        caption=(            f"Информация о Вас:\n"            f"Имя: {data['name']}\n"            f"Телефон: {data['number']}\n"            f"Вкусовые предпочтения: {data['food']}\n"            f"Аллергии: {data['alerg']}"        ),        reply_markup=kb.back    )    # Сохраняем в БД    await sql_add_guest_card(state)    update_guest_tg_id(message.from_user.id)    await state.clear()# Эхо на неизвестные команды@router.message()async def unknown(message: Message):    await message.answer('Неизвестная команда.')